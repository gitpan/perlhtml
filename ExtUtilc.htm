<HEAD><CENTER><TITLE>ExtUtils_Miniperl</TITLE>
</CENTER></HEAD>
<BODY><p><hr>

<H1> 
<A NAME="ExtUtils::Miniperl_name_0">
NAME</A>
</H1>
ExtUtils::Miniperl, writemain - write the C code for perlmain.c
<p><p><hr>

<H1> 
<A NAME="ExtUtils::Miniperl_synopsis_0">
SYNOPSIS</A>
</H1>

<A HREF="perlfunc.htm#perlfunc_use_1">use ExtUtils::Miniperl;</A>

<p><CODE>writemain(<STRONG>@directories</STRONG>);</CODE>
<p><p><hr>

<H1> 
<A NAME="ExtUtils::Miniperl_description_0">
DESCRIPTION</A>
</H1>
This whole module is written when perl itself is built from a script
called minimod.PL. In case you want to patch it, please patch
minimod.PL in the perl distribution instead.
<p><EM>writemain()</EM> takes an argument list of directories containing archive
libraries that relate to perl modules and should be linked into a new
perl binary. It writes to STDOUT a corresponding perlmain.c file that
is a plain C file containing all the bootstrap code to make the
modules associated with the libraries available from within perl.
<p>The typical usage is from within a Makefile generated by
ExtUtils::MakeMaker. So under normal circumstances you won't have to
deal with this module directly.
<p><p><hr>

<H1> 
<A NAME="ExtUtils::Miniperl_see_0">
SEE ALSO</A>
</H1>
<EM>ExtUtils::MakeMaker</EM>
<p>
</BODY>
</HTML>
