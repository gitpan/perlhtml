<HEAD><CENTER><TITLE>Pod_Text</TITLE>
</CENTER></HEAD>
<BODY><p><hr>

<H1> 
<A NAME="Pod::Text_name_0">
NAME</A>
</H1>
Pod::Text - convert POD data to formatted ASCII text
<p><p><hr>

<H1> 
<A NAME="Pod::Text_synopsis_0">
SYNOPSIS</A>
</H1>

<XMP>
        use Pod::Text;
        pod2text("perlfunc.pod");

</XMP>
<p>Also:
<p>
<XMP>
        pod2text < input.pod

</XMP>
<p><p><hr>

<H1> 
<A NAME="Pod::Text_description_0">
DESCRIPTION</A>
</H1>
Pod::Text is a module that can convert documentation in the POD format (such
as can be found throughout the Perl distribution) into formatted ASCII.
Termcap is optionally supported for boldface/underline, and can enabled via
<CODE><STRONG>$Pod::Text::termcap</STRONG>=1</CODE>. If termcap has not been enabled, then backspaces
will be used to simulate bold and underlined text.
<p>A separate <EM>pod2text</EM> program is included that is primarily a wrapper for
Pod::Text.
<p>The single function <CODE><EM>pod2text()</EM></CODE> can take one or two arguments. The first
should be the name of a file to read the pod from, or ``&lt;&amp;STDIN'' to read from
STDIN. A second argument, if provided, should be a filehandle glob where
output should be sent.
<p><p><hr>

<H1> 
<A NAME="Pod::Text_author_0">
AUTHOR</A>
</H1>
Tom Christiansen &lt;<A HREF="MAILTO:tchrist@mox.perl.com">tchrist@mox.perl.com</A>&gt;
<p><p><hr>

<H1> 
<A NAME="Pod::Text_todo_0">
TODO</A>
</H1>
Cleanup work. The input and output locations need to be more flexible,
termcap shouldn't be a global variable, and the terminal speed needs to
be properly calculated.
<p>
</BODY>
</HTML>
