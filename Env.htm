<HEAD><CENTER><TITLE>Env</TITLE>
</CENTER></HEAD>
<BODY><p><hr>

<H1> 
<A NAME="Env_name_0">
NAME</A>
</H1>
Env - perl module that imports environment variables
<p><p><hr>

<H1> 
<A NAME="Env_synopsis_0">
SYNOPSIS</A>
</H1>

<XMP>
    use Env;
    use Env qw(PATH HOME TERM);

</XMP>
<p><p><hr>

<H1> 
<A NAME="Env_description_0">
DESCRIPTION</A>
</H1>
Perl maintains environment variables in a pseudo-associative-array
named <STRONG>%ENV</STRONG>.  For when this access method is inconvenient, the Perl
module <CODE>Env</CODE> allows environment variables to be treated as simple
variables.
<p>The Env::
<A HREF="perlfunc.htm#perlfunc_import_0">import()</A>
 function ties environment variables with suitable
names to global Perl variables with the same names.  By default it
does so with all existing environment variables (
<A HREF="perlfunc.htm#perlfunc_keys_0">keys <STRONG>%ENV</STRONG></A>
).  If
the import function receives arguments, it takes them to be a list of
environment variables to tie; it's okay if they don't yet exist.
<p>After an environment variable is tied, merely use it like a normal variable.
You may access its value 
<p>
<XMP>
    @path = split(/:/, $PATH);

</XMP>
<p>or modify it
<p>
<XMP>
    $PATH .= ":.";

</XMP>
<p>however you'd like.
To remove a tied environment variable from
the environment, assign it the undefined value
<p>
<XMP>
    undef $PATH;

</XMP>
<p><p><hr>

<H1> 
<A NAME="Env_author_0">
AUTHOR</A>
</H1>
Chip Salzenberg &lt;<A HREF="MAILTO:chip@fin.uucp">chip@fin.uucp</A>&gt;
<p>
</BODY>
</HTML>
